name: Installer job

on:
  workflow_dispatch:

jobs:
  run_long_running:
    name: "Installer job"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      # prepare tgz
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
      - run: go version
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - run: mvn --version
      - name: Setup `packer`
        uses: hashicorp/setup-packer@v3.0.0
        id: setup
      - run: packer version
      # launch
      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3
      - run: terraform version
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: deploy.yml
          # Optional, directory where playbooks live
          directory: ./ansible
          # Optional, ansible configuration file content (ansible.cfg)
          configuration: |
            [defaults]
            callbacks_enabled = ansible.posix.profile_tasks, ansible.posix.timer
            stdout_callback = yaml
            nocows = false
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: |
            [all]
            example.com

            [group1]
            example.com
          # Optional, SSH known hosts file content
          known_hosts: |
            example.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
          # Optional, encrypted vault password
          vault_password: ${{secrets.VAULT_PASSWORD}}
          # Optional, galaxy requirements filepath
          requirements: galaxy-requirements.yml
          # Optional, additional flags to pass to ansible-playbook
          options: |
            --inventory .hosts
            --limit group1
            --extra-vars hello=there
            --verbose
      - run: ansible --version
      # installer kos
      # check others
      - run: python3 --version
      - run: aws --version